<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[creativepsyco's Blog]]></title>
  <link href="http://creativepsyco.github.com/atom.xml" rel="self"/>
  <link href="http://creativepsyco.github.com/"/>
  <updated>2012-10-22T01:01:19+08:00</updated>
  <id>http://creativepsyco.github.com/</id>
  <author>
    <name><![CDATA[Mohit Kanwal]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Node JS Script to run a web server for Backbone etc]]></title>
    <link href="http://creativepsyco.github.com/blog/2012/10/22/node-js-script-to-run-a-web-server-for-backbone-etc/"/>
    <updated>2012-10-22T00:18:00+08:00</updated>
    <id>http://creativepsyco.github.com/blog/2012/10/22/node-js-script-to-run-a-web-server-for-backbone-etc</id>
    <content type="html"><![CDATA[<h2>The Problem</h2>

<p>Sometimes we find ourselves wanting to be able to host a webserver to test out some HTML or javascript functionality. For example when Cross Origin Resource Policy (CORS) does not allow running of scripts from outside the domain of the webserver.</p>

<h2>The Solution</h2>

<p>The solution is a simple piece of node js script living in the directory. Surprisingly it is way way small</p>

<figure class='code'><figcaption><span>Sample NodeJS Script to run server</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">connect</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;connect&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">connect</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span>
</span><span class='line'>    <span class="nx">connect</span><span class="p">.</span><span class="kr">static</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">)</span>
</span><span class='line'><span class="p">).</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8080</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>This would start listening for a request on port 8080 and then serve the files from the current directory.</p>

<p>In order to use you must put the code in a file called <em>server.js</em></p>

<p>And Also must install <code>connect</code> module via</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  npm install connect
</span></code></pre></td></tr></table></div></figure>


<p>&#8211;mohit</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Page Control Javascript]]></title>
    <link href="http://creativepsyco.github.com/blog/2012/10/21/page-control-javascript/"/>
    <updated>2012-10-21T23:59:00+08:00</updated>
    <id>http://creativepsyco.github.com/blog/2012/10/21/page-control-javascript</id>
    <content type="html"><![CDATA[<h2>The Problem</h2>

<p>Sometimes having different pages of content causes us to think about loading them in a page like fashion. Thus there needs to be a <em>mediator</em> that can take care of the loading based on a few configuration variables.</p>

<!--more-->


<h2>The Solution</h2>

<p>Below is my attempt at making a page controller in javascript based a few config variables.</p>

<script src="https://gist.github.com/3868297.js"> </script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Doing a Wizard Like Flow in Backbone.js and Jquery Mobile]]></title>
    <link href="http://creativepsyco.github.com/blog/2012/10/21/doing-a-wizard-like-flow-in-backbone-dot-js-and-jquery-mobile/"/>
    <updated>2012-10-21T23:26:00+08:00</updated>
    <id>http://creativepsyco.github.com/blog/2012/10/21/doing-a-wizard-like-flow-in-backbone-dot-js-and-jquery-mobile</id>
    <content type="html"><![CDATA[<p>One of the things that new app developers do especially mobile ones, is that they give a step like flow to their users to enter data in a much more streamlined process by breaking it down into a number of steps and then load each one at a different time.</p>

<!--more-->


<h2>A Solution</h2>

<script src="https://gist.github.com/3927260.js?file=WizardBackbone.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CS3235]]></title>
    <link href="http://creativepsyco.github.com/blog/2012/10/12/cs3235/"/>
    <updated>2012-10-12T11:07:00+08:00</updated>
    <id>http://creativepsyco.github.com/blog/2012/10/12/cs3235</id>
    <content type="html"><![CDATA[<p>Hi -</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hello world]]></title>
    <link href="http://creativepsyco.github.com/blog/2012/10/12/hello-world/"/>
    <updated>2012-10-12T08:11:00+08:00</updated>
    <id>http://creativepsyco.github.com/blog/2012/10/12/hello-world</id>
    <content type="html"><![CDATA[<p><em>Every post starts with a Hello World. Every code you write starts with Hello World.</em></p>

<p><em>Then perhaps this should also.</em></p>

<p>I have moved my blog to Github now with the intention of using more and more of Git and ruby for use in my daily life. I can&#8217;t comment how much I am going to miss in this or how much I am going to gain, it is just a start and hopefully a start of something really new and tidy.</p>

<p>I am using Jekyll to power up the blog. It looks awesome and from the amount of configs needed to get it running I must it does not have that much of a turnaround time. Let&#8217;s see how far I go with this.</p>

<p>And what&#8217;s more this
&#8211;mohit</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zombie Ninjas Attack: A survivor's retrospective]]></title>
    <link href="http://creativepsyco.github.com/blog/2012/10/12/zombie-ninjas-attack-a-survivors-retrospective/"/>
    <updated>2012-10-12T07:46:00+08:00</updated>
    <id>http://creativepsyco.github.com/blog/2012/10/12/zombie-ninjas-attack-a-survivors-retrospective</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
